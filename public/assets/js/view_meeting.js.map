{"version":3,"sources":["view_meeting.js"],"names":[],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"view_meeting.js","sourcesContent":["/**\r\n * Created by michelB on 12/05/2017.\r\n */\r\n\r\n/*\r\n Créer un évènement se déclenchant lors du clic sur une ligne d'un tableau présentant des vidéos\r\n */\r\n\r\n$('#btnLive').click(function () {\r\n\r\n    console.log($('#btnLive span').attr('id'));\r\n\r\n    //$('#live-meeting').css('display', 'block').css('opacity', '1').css('background', 'rgba(0,0,0,0.7)');\r\n\r\n    player.loadVideoById({'videoId': $('#btnLive span').attr('id')});\r\n\r\n});\r\n\r\n$('#button').click(function () {\r\n\r\n    $('#live-meeting').css('display', 'none');\r\n    player.stopVideo();\r\n})\r\n\r\n\r\n// 2. This code loads the IFrame Player API code asynchronously.\r\nvar tag = document.createElement('script');\r\n\r\ntag.src = \"https://www.youtube.com/iframe_api\";\r\nvar firstScriptTag = document.getElementsByTagName('script')[0];\r\nfirstScriptTag.parentNode.insertBefore(tag, firstScriptTag);\r\n\r\n// 3. This function creates an <iframe> (and YouTube player)\r\n//    after the API code downloads.\r\nvar player;\r\n\r\nfunction onYouTubeIframeAPIReady() {\r\n    player = new YT.Player('player', {\r\n        height: '75%',\r\n        width: '100%',\r\n        events: {\r\n            'onReady': onPlayerReady,\r\n            'onStateChange': onPlayerStateChange\r\n        }\r\n    });\r\n\r\n}\r\n\r\n// 4. The API will call this function when the video player is ready.\r\nfunction onPlayerReady(event) {\r\n\r\n    event.target.setLoop(true);\r\n}\r\n\r\n// 5. The API calls this function when the player's state changes.\r\n//    The function indicates that when playing a video (state=1),\r\n//    the player should play for six seconds and then stop.\r\n\r\nfunction onPlayerStateChange(event) {\r\n\r\n    if (event.data == YT.PlayerState.ENDED) {\r\n\r\n        player.seekTo(0, true);\r\n    }\r\n\r\n}\r\n\r\nfunction stopVideo() {\r\n\r\n    player.stopVideo();\r\n}\r\n\r\nfunction pauseVideo() {\r\n\r\n    player.pauseVideo();\r\n}\r\n\r\n\r\n\r\n"]}