{"version":3,"sources":["listViewVideo.js"],"names":[],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"listViewVideo.js","sourcesContent":["\r\n/*\r\nCréer un évènement se déclenchant lors du clic sur une ligne d'un tableau présentant des vidéos\r\n */\r\n\r\n$('tr.clickable').click(function () {\r\n\r\n    console.log($(this).attr('id'));\r\n\r\n    $('#ConfirmAction').css('display', 'block').css('opacity', '1').css('background', 'rgba(0,0,0,0.7)');\r\n\r\n    player.loadVideoById({'videoId': $(this).attr('id')});\r\n\r\n});\r\n\r\n$('#button').click(function () {\r\n\r\n    $('#ConfirmAction').css('display', 'none');\r\n    player.stopVideo();\r\n})\r\n\r\n\r\n    // 2. This code loads the IFrame Player API code asynchronously.\r\n    var tag = document.createElement('script');\r\n\r\n    tag.src = \"https://www.youtube.com/iframe_api\";\r\n    var firstScriptTag = document.getElementsByTagName('script')[0];\r\n    firstScriptTag.parentNode.insertBefore(tag, firstScriptTag);\r\n\r\n    // 3. This function creates an <iframe> (and YouTube player)\r\n    //    after the API code downloads.\r\n    var player;\r\n\r\n    function onYouTubeIframeAPIReady() {\r\n        player = new YT.Player('player', {\r\n            height: '50%',\r\n            width: '50%',\r\n            events: {\r\n                'onReady': onPlayerReady,\r\n                'onStateChange': onPlayerStateChange\r\n            }\r\n        });\r\n\r\n    }\r\n\r\n    // 4. The API will call this function when the video player is ready.\r\n    function onPlayerReady(event) {\r\n\r\n        event.target.setLoop(true);\r\n    }\r\n\r\n    // 5. The API calls this function when the player's state changes.\r\n    //    The function indicates that when playing a video (state=1),\r\n    //    the player should play for six seconds and then stop.\r\n\r\n    function onPlayerStateChange(event) {\r\n\r\n        if (event.data == YT.PlayerState.ENDED) {\r\n\r\n            player.seekTo(0, true);\r\n        }\r\n\r\n    }\r\n\r\n    function stopVideo() {\r\n\r\n        player.stopVideo();\r\n    }\r\n\r\n    function pauseVideo() {\r\n\r\n        player.pauseVideo();\r\n    }\r\n\r\n\r\n\r\n"]}